/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "NSCoding.h"
#import "UIScrollView.h"
#import "UIView.h"

@class UIImageView, NSArray;
@protocol UIScrollViewDelegate;

@interface UIScrollView : UIView <NSCoding> {
@private
	CGSize _contentSize;
	UIEdgeInsets _contentInset;
	id _delegate;
	UIImageView* _verticalScrollIndicator;
	UIImageView* _horizontalScrollIndicator;
	UIEdgeInsets _scrollIndicatorInset;
	struct {
		unsigned tracking : 1;
		unsigned dragging : 1;
		unsigned verticalBounceEnabled : 1;
		unsigned horizontalBounceEnabled : 1;
		unsigned verticalBouncing : 1;
		unsigned horizontalBouncing : 1;
		unsigned bouncesZoom : 1;
		unsigned zoomBouncing : 1;
		unsigned alwaysBounceHorizontal : 1;
		unsigned alwaysBounceVertical : 1;
		unsigned canCancelContentTouches : 1;
		unsigned delaysContentTouches : 1;
		unsigned programmaticScrollDisabled : 1;
		unsigned scrollDisabled : 1;
		unsigned zoomDisabled : 1;
		unsigned scrollTriggered : 1;
		unsigned scrollDisabledOnTouchBegan : 1;
		unsigned ignoreNextTouchesMoved : 1;
		unsigned cancelNextContentTouchEnded : 1;
		unsigned inContentViewCall : 1;
		unsigned dontSelect : 1;
		unsigned contentTouched : 1;
		unsigned cantCancel : 1;
		unsigned directionalLockEnabled : 1;
		unsigned directionalLockAutoEnabled : 1;
		unsigned lockVertical : 1;
		unsigned lockHorizontal : 1;
		unsigned keepLocked : 1;
		unsigned showsHorizontalScrollIndicator : 1;
		unsigned showsVerticalScrollIndicator : 1;
		unsigned indicatorStyle : 2;
		unsigned inZoom : 1;
		unsigned hideIndicatorsInZoom : 1;
		unsigned pushedTrackingMode : 1;
		unsigned multipleDrag : 1;
		unsigned displayingScrollIndicators : 1;
		unsigned verticalIndicatorShrunk : 1;
		unsigned horizontalIndicatorShrunk : 1;
		unsigned contentFitDisableScrolling : 1;
		unsigned pagingEnabled : 1;
		unsigned pagingLeft : 1;
		unsigned pagingRight : 1;
		unsigned pagingUp : 1;
		unsigned pagingDown : 1;
		unsigned lastHorizontalDirection : 1;
		unsigned lastVerticalDirection : 1;
		unsigned dontScrollToTop : 1;
		unsigned scrollingToTop : 1;
		unsigned useGestureRecognizers : 1;
		unsigned autoscrolling : 1;
		unsigned automaticContentOffsetAdjustmentDisabled : 1;
		unsigned skipStartOffsetAdjustment : 1;
		unsigned delegateScrollViewDidScroll : 1;
		unsigned delegateScrollViewDidZoom : 1;
		unsigned delegateContentSizeForZoomScale : 1;
		unsigned preserveCenterDuringRotation : 1;
		unsigned delaysTrackingWhileDecelerating : 1;
		unsigned pinnedZoomMin : 1;
		unsigned pinnedXMin : 1;
		unsigned pinnedYMin : 1;
		unsigned pinnedXMax : 1;
		unsigned pinnedYMax : 1;
		unsigned skipLinkChecks : 1;
		unsigned wasIgnoringTapsInDimmingView : 1;
		unsigned isAnimatingScroll : 1;
		unsigned isAnimatingZoom : 1;
		unsigned staysCenteredDuringPinch : 1;
		unsigned wasDelayingPinchForSystemGestures : 1;
		unsigned systemGesturesRecognitionPossible : 1;
	} _scrollViewFlags;
	float _farthestDistance;
	CGPoint _initialTouchPosition;
	CGPoint _startTouchPosition;
	double _startTouchTime;
	double _startOffsetX;
	double _startOffsetY;
	double _lastUpdateOffsetX;
	double _lastUpdateOffsetY;
	CGPoint _lastTouchPosition;
	double _lastTouchTime;
	double _lastUpdateTime;
	CGPoint _zoomAnchorPoint;
	UIView* _contentView;
	float _minimumZoomScale;
	float _maximumZoomScale;
	int _zoomRubberBandHysteresisCount;
	UIView* _zoomView;
	double _horizontalVelocity;
	double _verticalVelocity;
	double _previousHorizontalVelocity;
	double _previousVerticalVelocity;
	CGPoint _stopOffset;
	void* _scrollHeartbeat;
	CGPoint _pageDecelerationTarget;
	CGSize _decelerationFactor;
	double _decelerationLnFactorH;
	double _decelerationLnFactorV;
	NSArray* _deferredBeginTouchesInfo;
	UIImageView** _shadows;
	id _scrollNotificationViews;
	double _contentOffsetAnimationDuration;
	id _animation;
	id _pinch;
	id _pan;
	id _swipe;
	float _pagingSpringPull;
	float _pagingFriction;
	int _fastScrollCount;
	float _fastScrollMultiplier;
	float _fastScrollStartMultiplier;
	double _fastScrollEndTime;
	CGPoint _parentAdjustment;
	CGPoint _rotationCenterPoint;
	float _accuracy;
	float _hysteresis;
	unsigned _zoomAnimationCount;
}
@property(assign, nonatomic) CGSize contentSize;
@property(assign, nonatomic) UIEdgeInsets contentInset;
@property(assign, nonatomic) id<UIScrollViewDelegate> delegate;
@property(assign, nonatomic) float maximumZoomScale;
@property(readonly, assign, nonatomic, getter=_isAnimatingZoom) BOOL isAnimatingZoom;
@property(readonly, assign, nonatomic, getter=_isAnimatingScroll) BOOL isAnimatingScroll;
@property(readonly, assign, nonatomic, getter=_isHorizontalBouncing) BOOL isHorizontalBouncing;
@property(readonly, assign, nonatomic, getter=_isVerticalBouncing) BOOL isVerticalBouncing;
@property(assign, nonatomic) BOOL scrollsToTop;
@property(readonly, assign, nonatomic, getter=isZoomBouncing) BOOL zoomBouncing;
@property(readonly, assign, nonatomic, getter=isZooming) BOOL zooming;
@property(assign, nonatomic) BOOL bouncesZoom;
@property(assign, nonatomic) float zoomScale;
@property(assign, nonatomic) float minimumZoomScale;
@property(assign, nonatomic) BOOL canCancelContentTouches;
@property(assign, nonatomic) BOOL delaysContentTouches;
@property(readonly, assign, nonatomic, getter=isDecelerating) BOOL decelerating;
@property(readonly, assign, nonatomic, getter=isDragging) BOOL dragging;
@property(readonly, assign, nonatomic, getter=isTracking) BOOL tracking;
@property(assign, nonatomic) float decelerationRate;
@property(assign, nonatomic) int indicatorStyle;
@property(assign, nonatomic) UIEdgeInsets scrollIndicatorInsets;
@property(assign, nonatomic) BOOL showsVerticalScrollIndicator;
@property(assign, nonatomic) BOOL showsHorizontalScrollIndicator;
@property(assign, nonatomic, getter=isScrollEnabled) BOOL scrollEnabled;
@property(assign, nonatomic, getter=isPagingEnabled) BOOL pagingEnabled;
@property(assign, nonatomic) BOOL alwaysBounceHorizontal;
@property(assign, nonatomic) BOOL alwaysBounceVertical;
@property(assign, nonatomic) BOOL bounces;
@property(assign, nonatomic, getter=isDirectionalLockEnabled) BOOL directionalLockEnabled;
@property(assign, nonatomic) CGPoint contentOffset;
-(id)initWithFrame:(CGRect)frame;
-(id)initWithCoder:(id)coder;
-(void)_centerContentIfNecessary;
-(void)layoutSubviews;
-(void)_populateArchivedSubviews:(id)subviews;
-(void)encodeWithCoder:(id)coder;
-(void)dealloc;
-(id)_pinchGesture;
-(void)_updatePinchGesture;
-(id)_panGesture;
-(id)_scrollViewTouchDelayGesture;
-(void)_updatePagingGesture;
-(void)setFrame:(CGRect)frame;
-(void)setBounds:(CGRect)bounds;
-(BOOL)_isRectFullyVisible:(CGRect)visible;
-(void)removeFromSuperview;
-(void)_didMoveFromWindow:(id)window toWindow:(id)window2;
-(void)setContentOffset:(CGPoint)offset animated:(BOOL)animated;
-(void)scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;
-(void)setZoomEnabled:(BOOL)enabled;
-(BOOL)isZoomEnabled;
-(void)setProgrammaticScrollEnabled:(BOOL)enabled;
-(BOOL)isProgrammaticScrollEnabled;
-(void)setBouncesHorizontally:(BOOL)horizontally;
-(BOOL)bouncesHorizontally;
-(void)setBouncesVertically:(BOOL)vertically;
-(BOOL)bouncesVertically;
-(float)horizontalScrollDecelerationFactor;
-(void)setHorizontalScrollDecelerationFactor:(float)factor;
-(float)verticalScrollDecelerationFactor;
-(void)setVerticalScrollDecelerationFactor:(float)factor;
-(BOOL)usesGestureRecognizers;
-(void)setAllowsMultipleFingers:(BOOL)fingers;
-(BOOL)allowsMultipleFingers;
-(void)setTracksImmediatelyWhileDecelerating:(BOOL)decelerating;
-(BOOL)tracksImmediatelyWhileDecelerating;
-(float)_scrollHysteresis;
-(void)delayed:(id)delayed;
-(void)_systemGestureStateChanged:(id)changed;
-(void)setUsesGestureRecognizers:(BOOL)recognizers;
-(void)willRotateToInterfaceOrientation:(id)interfaceOrientation;
-(void)willAnimateRotationToInterfaceOrientation:(id)interfaceOrientation;
-(void)_registerForRotation:(BOOL)rotation ofWindow:(id)window;
-(BOOL)preservesCenterDuringRotation;
-(void)setPreservesCenterDuringRotation:(BOOL)rotation;
-(void)_willMoveToWindow:(id)window;
-(void)flashScrollIndicators;
-(void)_setShowsBackgroundShadow:(BOOL)shadow;
-(BOOL)_showsBackgroundShadow;
-(void)setShowBackgroundShadow:(BOOL)shadow;
-(id)commonHitTest:(id)test;
-(id)hitTest:(CGPoint)test forEvent:(GSEventRef)event;
-(id)hitTest:(CGPoint)test withEvent:(id)event;
-(BOOL)_usesDifferentHitTestForGestures;
-(id)_gestureTargetHitTest:(CGPoint)test withEvent:(id)event;
-(CGPoint)_touchPositionForTouches:(id)touches;
-(CADoublePoint)_rubberBandContentOffsetForOffset:(CADoublePoint)offset outsideX:(BOOL*)x outsideY:(BOOL*)y;
-(BOOL)_updateTouchPanWithStartDelta:(CGSize)startDelta event:(id)event ignoringDirectionalScroll:(BOOL)scroll;
-(void)_updatePanGesture;
-(void)_endPanWithEvent:(id)event;
-(id)_getDelegateZoomView;
-(void)_setZoomAnchorPoint:(CADoublePoint)point;
-(CADoublePoint)_zoomAnchorPoint;
-(BOOL)_staysCenteredDuringPinch;
-(void)_setStaysCenteredDuringPinch:(BOOL)pinch;
-(void)_updatePinchGestureForState:(int)state;
-(BOOL)gestureRecognizer:(id)recognizer canPreventGestureRecognizer:(id)recognizer2;
-(BOOL)_gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)gestureRecognizer;
-(BOOL)_gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;
-(BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;
-(void)gestureRecognizerFailed:(id)failed;
-(void)_handleSwipe:(id)swipe;
-(void)handlePinch:(id)pinch;
-(void)handlePan:(id)pan;
-(void)touchesBegan:(id)began withEvent:(id)event;
-(void)touchesMoved:(id)moved withEvent:(id)event;
-(void)_touchesEnded:(id)ended withEvent:(id)event wasCancelled:(BOOL)cancelled;
-(void)touchesEnded:(id)ended withEvent:(id)event;
-(void)touchesCancelled:(id)cancelled withEvent:(id)event;
-(BOOL)canHandleSwipes;
-(int)swipe:(int)swipe withEvent:(GSEventRef)event;
-(BOOL)cancelTouchTracking;
-(BOOL)cancelMouseTracking;
-(void)cancelNextContentTouchEnded;
-(BOOL)touchesShouldBegin:(id)touches withEvent:(id)event inContentView:(id)contentView;
-(BOOL)touchesShouldCancelInContentView:(id)touches;
-(void)_setIgnoreLinkedOnChecks:(BOOL)checks;
-(BOOL)_ignoreLinkedOnChecks;
-(void)_zoomToCenter:(CGPoint)center scale:(float)scale duration:(double)duration;
-(void)_zoomToCenter:(CGPoint)center scale:(float)scale duration:(double)duration force:(BOOL)force;
-(float)_zoomRubberBandScaleForScale:(float)scale;
-(float)_zoomScaleForRubberBandScale:(float)rubberBandScale;
-(float)_zoomAnimationDurationForScale:(float)scale;
-(void)_zoomAnimationDidStop;
-(void)_adjustContentSizeForView:(id)view atScale:(float)scale;
-(void)setZoomScale:(float)scale withAnchorPoint:(CGPoint)anchorPoint validatingScrollOffset:(BOOL)offset allowRubberbanding:(BOOL)rubberbanding animated:(BOOL)animated duration:(double)duration notifyDelegate:(BOOL)delegate;
-(void)setZoomScale:(float)scale withAnchorPoint:(CGPoint)anchorPoint validatingScrollOffset:(BOOL)offset allowRubberbanding:(BOOL)rubberbanding animated:(BOOL)animated duration:(double)duration notifyDelegate:(BOOL)delegate force:(BOOL)force;
-(void)setZoomScale:(float)scale animated:(BOOL)animated;
-(float)_zoomScaleFromPresentationLayer:(BOOL)presentationLayer;
-(void)zoomToRect:(CGRect)rect animated:(BOOL)animated;
-(id)description;
@end

@interface UIScrollView (UIAutoscrollAdditions)
-(BOOL)_isScrollingEnabled;
@end

@interface UIScrollView (Static)
-(void)_notifyDidScroll;
-(BOOL)_getPagingDecelerationOffset:(CADoublePoint*)offset forTimeInterval:(double)timeInterval;
-(CGPoint)_pageDecelerationTarget;
-(BOOL)_getBouncingDecelerationOffset:(double*)offset forTimeInterval:(double)timeInterval lastUpdateOffset:(double)offset3 min:(double)min max:(double)max decelerationFactor:(double)factor decelerationLnFactor:(double)factor7 velocity:(double*)velocity;
-(void)_getStandardDecelerationOffset:(double*)offset forTimeInterval:(double)timeInterval min:(double)min max:(double)max decelerationFactor:(double)factor decelerationLnFactor:(double)factor6 velocity:(double*)velocity;
-(void)_smoothScroll:(double)scroll;
-(BOOL)_continueScrollingAtOffset:(CGPoint)offset;
-(void)_popTrackingRunLoopMode;
-(void)_runLoopModePopped:(id)popped;
-(void)_prepareToPageWithHorizontalVelocity:(float)horizontalVelocity verticalVelocity:(float)velocity;
-(void)_startTimer:(BOOL)timer;
-(void)_deferredBeginTouchesInContentView;
-(void)_cancelPendingAnimations;
-(void)_adjustScrollerIndicators:(BOOL)indicators alwaysShowingThem:(BOOL)them;
-(void)_adjustContentOffsetIfNecessary;
-(void)_hideScrollIndicators;
@end

@interface UIScrollView (UIScrollViewInternal)
@property(assign, nonatomic, getter=isProgrammaticScrollEnabled) BOOL programmaticScrollEnabled;
+(float)_cancelSelectDistance;
-(float)_shadowHeightOffset;
-(void)_adjustBackgroundShadowsForContentSizeForcedVisible:(BOOL)contentSizeForcedVisible withOffset:(float)offset;
-(void)_adjustBackgroundShadowsForContentSizeForcedVisible:(BOOL)contentSizeForcedVisible;
-(void)_stopScrollDecelerationNotify:(BOOL)notify;
-(void)_stopScrollingNotify:(BOOL)notify dealloc:(BOOL)dealloc pin:(BOOL)pin;
-(void)_resetScrollingWithEvent:(GSEventRef)event;
-(void)_resetScrollingWithUIEvent:(id)uievent;
-(BOOL)_beginTrackingWithEvent:(id)event;
-(BOOL)_resetScrollingForGestureEvent:(id)gestureEvent;
-(void)_addScrollNotificationView:(id)view;
-(void)_removeScrollNotificationView:(id)view;
-(BOOL)_canCancelContentTouches:(id)touches;
-(BOOL)_cancelContentTouchWithEvent:(id)event forced:(BOOL)forced;
-(void)_addContentSubview:(id)subview atBack:(BOOL)back;
-(void)_moveContentSubview:(id)subview toBack:(BOOL)back;
-(void)_setContentOffsetAnimationDuration:(double)duration;
-(double)_contentOffsetAnimationDuration;
-(CGPoint)_originalOffsetForAnimatedSetContentOffset;
-(void)_clearContentOffsetAnimation;
-(void)_setContentOffset:(CGPoint)offset duration:(double)duration animationCurve:(int)curve;
-(void)_setContentOffset:(CGPoint)offset animated:(BOOL)animated animationCurve:(int)curve;
-(void)_setAutomaticContentOffsetAdjustmentEnabled:(BOOL)enabled;
-(void)_forceDelegateScrollViewDidZoom:(BOOL)_forceDelegateScrollView;
-(void)_scrollViewAnimationEnded;
-(BOOL)_isAnimatingScroll;
-(BOOL)_scrollToTop;
-(BOOL)_scrollsToMakeFirstResponderVisible;
-(id)_defaultHitTest:(CGPoint)test withEvent:(id)event;
-(id)_hitTestForContentView:(CGPoint)contentView withEvent:(id)event;
-(void)_beginTouchesInContentView:(id)contentView touches:(id)touches withEvent:(id)event;
-(id)_touchedContentView;
-(double)_touchDelayForScrollDetection;
-(CGPoint)_stopOffset;
-(double)_horizontalVelocity;
-(double)_verticalVelocity;
-(void)_shiftOffset:(CGSize)offset;
-(void)_setContentOffsetPinned:(CGPoint)pinned;
-(id)_parentScrollView;
-(id)_popoverSuperview;
-(void)_setIgnorePopoverDimmingViewTaps:(BOOL)taps;
-(BOOL)_isIgnoringPopoverDimmingViewTaps;
-(void)_notifyPopOverIsScrolling:(BOOL)scrolling;
-(void)_notifyPopOverStoppedScrolling;
-(void)_notifyPopOverStoppedScrollingLater;
-(void)_adjustForAutomaticKeyboardInfo:(id)automaticKeyboardInfo animated:(BOOL)animated lastAdjustment:(float*)adjustment;
-(BOOL)_canScrollX;
-(BOOL)_canScrollY;
-(BOOL)_pagingLeft;
-(BOOL)_pagingRight;
-(void)_setAutoscrolling:(BOOL)autoscrolling;
-(BOOL)_isAutoscrolling;
-(CGPoint)autoscrollContentOffset;
-(void)setAutoscrollContentOffset:(CGPoint)offset;
-(CGRect)contentFrameForView:(id)view;
-(void)_skipNextStartOffsetAdjustment;
-(BOOL)_isAnimatingContentOffset;
-(void)_adjustShadowsIfNecessary;
-(void)_adjustShadowsIfNecessaryForOffset:(float)offset;
-(id)_backgroundShadowForSlideAnimation;
-(void)_scrollViewWillBeginDragging;
-(void)_scrollViewDidEndDraggingWithDeceleration:(BOOL)_scrollView;
-(void)_scrollViewDidEndDecelerating;
-(void)_scrollViewWillBeginZooming;
-(void)_scrollViewDidEndZooming;
@end

@interface UIScrollView (UIScrollViewGestures)
-(CGPoint)offset;
-(void)setOffset:(CGPoint)offset;
-(void)setScrollingEnabled:(BOOL)enabled;
-(void)_startGesture:(id)gesture withEvent:(id)event;
-(void)_changedGesture:(id)gesture withEvent:(id)event;
-(void)_endGesture:(id)gesture withEvent:(id)event;
-(void)didFinishGesture:(int)gesture inView:(id)view forEvent:(GSEventRef)event;
@end

@interface UIScrollView (UIKitAccessibilityInterfaceBuilderSupport)
-(BOOL)isElementAccessibilityExposedToInterfaceBuilder;
@end

@interface UIScrollView (UITextRangeViewScrollerSupport)
-(void)_enableScrollingIfNecessary;
-(void)_disableScrollingIfNecessary;
@end

@interface UIScrollView (UIWebSelectionAutoscroll)
-(int)scrollableDirections;
-(float)maxVelocityInDirection:(int)direction;
@end

